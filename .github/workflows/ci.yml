on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHONUNBUFFERED: 1
  PYTHONIOENCODING: utf-8
  ATEST_RETRIES: 3

jobs:
  ci:
    name: ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.6'
          - '3.8'
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ matrix.python-version }}-
            ${{ runner.os }}-conda-

      - name: cache (yarn)
        uses: actions/cache@v1
        with:
          path: .yarn-packages
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-
            yarn-

      - name: install (conda)
        uses: goanpeca/setup-miniconda@v1.6.0
        with:
          activate-environment: jupyterlab-drawio
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: build (linux)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash -l {0}
        run: |
          source /usr/share/miniconda/bin/deactivate
          source /usr/share/miniconda/bin/activate /usr/share/miniconda/envs/jupyterlab-drawio
          doit all || doit all

      - name: build (macos)
        if: ${{ contains(matrix.os, 'macos') }}
        shell: bash -l {0}
        run: |
          source /usr/local/miniconda/bin/deactivate
          source /usr/local/miniconda/bin/activate /usr/local/miniconda/envs/jupyterlab-drawio
          doit all || doit all

      - name: build (windows)
        if: ${{ contains(matrix.os, 'windows') }}
        shell: cmd /C CALL {0}
        run: |
          call C:\Miniconda\Scripts\deactivate
          call C:\Miniconda\Scripts\activate C:\Miniconda\envs\jupyterlab-drawio
          doit all || doit all

      - name: clean (windows)
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          taskkill /F /IM python.exe || echo "no python"
          taskkill /F /IM node.exe || echo "no node"

      - name: report (robot)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: RF${{ github.run_number }} ${{ matrix.os }}${{ matrix.python-version }}
          path: ./atest/output
