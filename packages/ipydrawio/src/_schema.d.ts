/*
  Copyright 2021 ipydrawio contributors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Color = string;
/**
 * [min|atlas|dark|sketch]: Uses the Minimal, Atlas, Dark or Sketch UI theme (default is Kennedy).
 */
export type UITheme = 'min' | 'atlas' | 'dark' | 'kennedy' | 'sketch';

/**
 * Configure Diagram Settings
 */
export interface DiagramDocuments {
  drawioConfig?: DrawioConfiguration;
  drawioExportUrl?: DrawioExportURL;
  drawioUrlParams?: DrawioURLParams;
  /**
   * disable returning focus to the main frame when the `escape` key is pressed
   */
  'disable-escape-focus'?: boolean;
  [k: string]: unknown;
}
/**
 * Configuration options sent to each drawio editor. https://www.diagrams.net/doc/faq/configure-diagram-editor
 */
export interface DrawioConfiguration {
  /**
   * Defines the delay (in ms) between the last change and the autosave of the file
   */
  autosaveDelay?: number;
  /**
   * Specifies if the XML output should be compressed.
   */
  compressXml?: boolean;
  /**
   * Defines a string with CSS rules to be used to configure the diagrams.net user interface.
   */
  css?: string;
  /**
   * TBD: see https://www.diagrams.net/doc/faq/configure-diagram-editor
   */
  customColorSchemes?: {
    [k: string]: unknown;
  };
  /**
   * An array of font family names to be added before defaultFonts
   */
  customFonts?: (
    | string
    | {
        fontFamily?: string;
        fontUrl?: string;
        [k: string]: unknown;
      }
  )[];
  /**
   * Colour codes to be added before presetColors (no leading # for the colour codes)
   */
  customPresetColors?: Color[];
  /**
   * Set the server endpoint region. The default is to use your closest region, (either EU or US). If lockdown is set to true, dataGovernance is ignored.
   */
  dataGovernance?: string;
  /**
   * TBD: see https://www.diagrams.net/doc/faq/configure-diagram-editor
   */
  defaultColorSchemes?: {
    fill?: Color;
    font?: string;
    gradient?: Color;
    stroke?: Color;
    [k: string]: unknown;
  };
  /**
   * Colour codes for the lower palette in the colour dialog (no leading # for the colour codes).
   */
  defaultColors?: Color[];
  /**
   * Defines an array of IDs to load custom libraries.
   */
  defaultCustomLibraries?: string[];
  /**
   * Defines the default length for new connectors
   */
  defaultEdgeLength?: number;
  /**
   * TBD: see https://www.diagrams.net/doc/faq/configure-diagram-editor
   */
  defaultEdgeStyle?: {
    [k: string]: unknown;
  };
  /**
   * An array of font family names in the format panel font drop-down list. All fonts must be installed on the server and all clients or be added using the fontCss option.
   */
  defaultFonts?: (
    | string
    | {
        fontFamily?: string;
        fontUrl?: string;
        [k: string]: unknown;
      }
  )[];
  /**
   * Defines a semicolon-separated list of library keys (unique names) in a string to be initially displayed in the left panel (e.g. general;uml;company-graphics). Possible keys include custom entry IDs from the libraries field, or keys for the libs URL parameter
   */
  defaultLibraries?: string;
  /**
   * TBD: see https://www.diagrams.net/doc/faq/configure-diagram-editor
   */
  defaultVertexStyle?: {
    [k: string]: unknown;
  };
  /**
   * Defines the XML for blank diagrams
   */
  emptyDiagramXml?: string;
  /**
   * Defines the XML for blank diagrams and libraries
   */
  emptyLibraryXml?: string;
  /**
   * Specifies if the open and new library functions are enabled (true or false, the default true).
   */
  enableCustomLibraries?: boolean;
  /**
   * Defines an array of strings of library keys which will be available in the More Shapes dialog. If you define this as null, all libraries will be visible. If you leave the array empty, no libraries will be visible
   */
  enabledLibraries?: string[];
  /**
   * Defines a string with CSS rules for web fonts to be used in diagrams. This should be one or more @font-face rule,
   */
  fontCss?: string;
  /**
   * JSON structure with key, value pairs to define global variables for system-wide placeholders. You should keep the number of entries small.
   */
  globalVars?: {
    [k: string]: unknown;
  };
  /**
   * Defines the number of minor grid steps (14.3.2 and later).
   */
  gridSteps?: number;
  /**
   * Defines an array of objects that list additional libraries and sections in the left panel and the More Shapes dialog
   */
  libraries?: LibrarySection[];
  /**
   * Disable data transmission, apart from directly between your browser and your selected data storage location. Default is false.
   */
  lockdown?: boolean;
  /**
   * Defines the maximum size for images in bytes. Default is 1000000.
   */
  maxImageBytes?: number;
  /**
   * Defines the maximum width or height of the image, where the lowest value is used.
   */
  maxImageSize?: number;
  /**
   * Ignores the current settings on the client-side if this is set to true
   */
  override?: boolean;
  /**
   * Defines an array of plugin URLs that should be loaded with the diagram editor. Plugins are JavaScript files that can modify the editor UI and behaviour.
   */
  plugins?: string[];
  /**
   * Colour codes for the upper palette in the colour dialog (no leading # for the colour codes).
   */
  presetColors?: Color[];
  /**
   * Disables word wrap and complex formatting for labels by default to avoid foreignObjects in the SVG output (14.5.9 and later).
   */
  simpleLabels?: boolean;
  styles?: Style[];
  /**
   * Defines the URL of the source file for the Templates dialog (multiple <template> tags are allowed).
   */
  templateFile?: string;
  /**
   * Defines the height for the entries in the left panel
   */
  thumbHeight?: number;
  /**
   * Defines the width for the entries in the left panel
   */
  thumbWidth?: number;
  /**
   * The current version of the configuration (any string, e.g. 1.0). If this is different from the last used version, then the current settings on the client-side (.drawio-config) will be reset. The default is null. Change this to force the stored settings in the client to be reset and apply the current configuration
   */
  version?: string;
  /**
   * Defines the zoom factor for mouse wheel and trackpad zoom. Default is 1.2. (14.7.0 and later).
   */
  zoomFactor?: number;
  [k: string]: unknown;
}
export interface LibrarySection {
  entries?: LibraryEntry[];
  title?: LibraryResource;
  [k: string]: unknown;
}
export interface LibraryEntry {
  desc?: LibraryResource;
  id?: string;
  libs?: DrawioLibrary[];
  preview?: string;
  title?: LibraryResource;
  [k: string]: unknown;
}
export interface LibraryResource {
  main?: string;
  [k: string]: unknown;
}
export interface DrawioLibrary {
  data?: {
    aspect?: string;
    h?: number;
    w?: number;
    /**
     * NB: appears to be base64-encoded
     */
    xml?: string;
    [k: string]: unknown;
  };
  tags?: string;
  title?: LibraryResource;
  url?: string;
  [k: string]: unknown;
}
export interface Style {
  commonStyle?: {
    [k: string]: unknown;
  };
  edgeStyle?: {
    [k: string]: unknown;
  };
  graph?: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * URL parameters for the export URL.
 */
export interface DrawioExportURL {
  params?: {
    /**
     * Whether all pages should be rendered 0 0 1
     */
    allPages?: string;
    /**
     * Whether the response data should be base64 (and png embedded data) encoded 0 or 1
     */
    base64?: string;
    /**
     * The background colour for the image #ff8888
     */
    bg?: string;
    /**
     * The size of the border for the page 0 10
     */
    border?: number;
    /**
     * The data to embed into the png -
     */
    data?: string;
    /**
     * The key to use when embedding the data into the png myKey
     */
    dataHeader?: string;
    /**
     * Embed data in the png with the dataHeader key null 0 or 1
     */
    embedData?: string;
    /**
     * Embed the diagram data in the png 0 or 1
     */
    embedXml?: string;
    /**
     * Additional detail how what should be rendered, e.g. layer-names
     */
    extras?: {
      [k: string]: unknown;
    };
    /**
     * The filename to included in the content-disposition header myFile.png
     */
    filename?: string;
    /**
     * The renderering format for the diagram png pdf
     */
    format?: string;
    /**
     * The index of the page to start rendering from 1
     */
    from?: number;
    /**
     * Set the view port width 0 10
     */
    h?: number;
    /**
     * The id of the page to render page id
     */
    pageId?: string;
    /**
     * The scale for the rendered diagram 1 1.5
     */
    scale?: number;
    /**
     * The index of the page to finish rendering at 2
     */
    to?: number;
    /**
     * Set the view port height 0 10
     */
    w?: number;
    [k: string]: unknown;
  };
  /**
   * URL for (local) drawio-export server https://github.com/jgraph/draw-image-export2
   */
  url?: string;
  [k: string]: unknown;
}
/**
 * URL parameters for the drawio iframe https://web.archive.org/web/20210425055302/https://www.diagrams.net/doc/faq/supported-url-parameters
 */
export interface DrawioURLParams {
  /**
   * url: Sets the base URL to use for links (use this if `document.referrer` is not available in embed mode).
   */
  base?: string;
  /**
   * 60: Sets the border width used in lightbox mode (the default is `60`).
   */
  border?: number;
  /**
   * 0/1: Disables local storage as a storage location (`0`) or shows the browser option in the storage dialog (`1`).
   */
  browser?: number;
  /**
   * 0: Uses the chromeless read-only viewer.
   */
  chrome?: number;
  /**
   * key1;key2;key;...;keyN: Specifies custom libraries (keys are file IDs or _URLs with a U-prefix_)
   */
  clibs?: string;
  /**
   * 1: Runs diagrams.net in client mode. This displays a normal UI and sends a `ready` message to the opener or parent when the page is loaded. After receiving a message containing XML or compressed XML, a local file is created. The file is then set to `modified` so the connection to the window can be closed after sending the initial XML. Whether the XML is loaded again after a page refresh, depends on the caller implementation. Use `proto=json` to use a custom protocol for special cases.
   */
  client?: number;
  /**
   * 1: Shows the *Close* button in chromeless mode which closes the window when selected.
   */
  close?: number;
  /**
   * 1: Sends the `configure` event and waits for the `configure` action. See more about the _embed mode_. **NEW `14.6.10`**
   */
  configure?: number;
  /**
   * regex: Checks whether URLS have CORS enabled using a URL encoded regular expression, e.g.cors=%5Ehttps%3F%3A%5C%2F%5C%2F.*%5C.github%5C.io%5C%2F **TBD `14.6.10`**
   */
  cors?: string;
  /**
   * url/name: Creates a new file from a template URL. If the value is not a URL and is not empty, the script will try to use `window.opener_url]`. In [embed mode_, `window.opener[name]` will be used to get the initial XML. Note that this requires the same origin policy in the opener/parent for reading the variable.
   */
  create?: string;
  /**
   * data: Gets the XML data for the diagram (used in client mode to bypass message passing and cross frame access). **TBD `14.6.10`**
   */
  data?: string;
  /**
   * 0: Disables the Dropbox integration.
   */
  db?: number;
  /**
   * 1: Shortcut for `db=0&gapi=0&math=0&picker=0`, disables the splash screen and creates an empty, local diagram file.
   */
  demo?: number;
  /**
   * {compressed-json}: Passes the CSV import descriptor (_example](https://web.archive.org/web/20210425055302/https://www.draw.io/?desc=SnVTtjpswEHwafl50gUP5nZC7F7i+gIMdvI3xIrMkSp++u7bh0tKoVSUE9sx6PPuRFLtDUZZTcPwuqj2/LdEwxuUHP9+7oAa76YDsdNoAMqSDugG+aFDM9aMgX0sMXWtVoE07XkWybPh9xtArWm54pLQitRBFWTl1Mi7uXouy9qo3/Cmq5hSK6p2/wMRId2eK6ljUotCiQyb37OBeVIcESnBZDzgCAfokwe4gicxifPOrDea8aPUKHGG8vjaykZOz4HsEoo6S83XDwlU2I4az9wP0qov+yjot5frDzQKZz0G1Qt24qoxZ6vnAccvLgJPXRufdGZxrUmIiI9ukMlLAi3mgEpDIbAm08QR0T65eMiq1HNP1AnMToB8w0My36L1pKdd+lwt5DtjPFYhErpPnvEImpJGZ4OKtgmMTV5HgrybQYzSFyTxGpHI+uXv8XTE+kkecnCdPPJM6ttJtp3Bd6m+83oeAN96eHLaXbxZ8gj+kFblJ6OkTfkg/t9uv0dsd/6OiPIWrlP5cTtDruH9J6W9unTnTclgAwuGX/Q002YSoKToT1BroLK3gQWkNvssjuC3n0ew8hjyBnEjZ5B9Ikya8ydOcHYG/pFD5f8pTjDpO8aL9NtszunvCOHXH6dFiTPsn)). Works with the [www.draw.io_ domain only. **NEW `14.6.10`**
   */
  desc?: {
    [k: string]: unknown;
  };
  /**
   * 0: Disables draft states (does not save unsaved files in *IndexedDB*).
   */
  drafts?: number;
  /**
   * 0: Simulates _app.diagrams.net_ regardless of the domain name (uses the old app ID).
   */
  drive?: number;
  /**
   * move: Disables the handling of connector segments without having previously selected the connector.
   */
  edge?: string;
  /**
   * `edit=url`: Adds a link for the *Edit* button in chromeless mode (use `edit=_blank` to edit the diagram as a new copy).
   */
  edit?: string | '_blank';
  /**
   * `embed=1:` Runs diagrams.net in _embed mode](/web/20210425055302/https://www.diagrams.net/doc/faq/embed-mode.html). Use this mode with [embed.diagrams.net_ only. **NEW `14.6.10`**
   */
  embed?: {
    [k: string]: unknown;
  };
  /**
   * 0: Disables the format panel on the right.
   */
  format?: number;
  /**
   * 0: Disables the Google integration.
   */
  gapi?: number;
  /**
   * 0: Disables the Github integration.
   */
  gh?: number;
  /**
   * url: Sets the URL-encoded path to a custom GitLab installation to use for GitLab file operations.
   */
  gitlab?: string;
  /**
   * ID: Specifies the _client ID of the custom GitLab application_ when using a custom GitLab instance.
   */
  'gitlab-id'?: string;
  /**
   * 0: Disables the GitLab integration.
   */
  gl?: number;
  /**
   * 1: Uses the chromeles mode with the grid enabled.
   */
  grid?: number;
  /**
   * 1: Hides the controls that allow you to change the current page in lightbox mode. **NEW `14.6.10`**
   */
  'hide-pages'?: number;
  /**
   * hex: Specifies the highlight colour (with no leading `#`) for links in chromeless mode.
   */
  highlight?: string;
  /**
   * 1: If modified specifies a resource key, this is used to keep the modified state after Save is selected. **TBD `14.6.10`**
   */
  keepmodified?: number;
  /**
   * xy: Specifies the language of the user interface. Possible values for `xy` include  *i18n* ar, bs, ca, cs, da, de, el, en, es, et, fi, fil, fr, he, hu, id, it, ja, ko, ms, nl, no, pl, pt, pt-br, ro, ru, sr, sv, th, tr, uk, vi, zh, zh-tw
   */
  lang?: string;
  /**
   * 1: Adds layer control in chromeless mode
   */
  layers?: number;
  /**
   * 1: Specifies whether libraries should be enabled in embed mode. The default is disabled (0). **TBD `14.6.10`**
   */
  libraries?: number;
  /**
   * key1;key2;...;keyN: Specifies the current libraries. Possible keys are allied\_telesis, android, archimate, archimate3, arrows2, atlassian, aws3, aws3d, aws4, azure, basic, bootstrap, bpmn, cabinets, cisco, cisco\_safe, citrix, clipart, dfd, eip, electrical, er, floorplan, flowchart, gcp2, general, gmdl, ibm, images, infographic, ios, lean\_mapping, mockups, mscae, network, office, pid, rack, signs, sitemap, sysml, uml, veeam and webicons.
   */
  libs?: string;
  /**
   * 1: Uses the lightbox in chromeless mode (larger zoom, no page visible, chromeless).
   */
  lightbox?: number;
  /**
   * 1: Uses device mode only.
   */
  local?: number;
  /**
   * 0: Disables MathJax support.
   */
  math?: number;
  /**
   * : Sets the font to use for math typesetting. Possible values are STIX-Web and TeX (default). **TBD `14.6.10`**
   */
  'math-font'?: string;
  /**
   * html: Sets the math typesetting output to `HTML-CSS`. **NEW `14.6.10`**
   */
  'math-output'?: {
    [k: string]: unknown;
  };
  /**
   * [google|onedrive|github|dropobox|device|browser]: Switches to the specified mode.
   */
  mode?: 'google' | 'onedrive' | 'github' | 'dropobox' | 'device' | 'browser';
  /**
   * 1: Enables folding in chromeless mode.
   */
  nav?: number;
  /**
   * 1: Displays no Exit button. Instead of using this URL parameter, you can specify this setting in the load message. **TBD `14.6.10`**
   */
  noExitBtn?: number;
  /**
   * 1: Displays a Save and Exit button instead of a Save button. Instead of using this URL parameter, you can specify this setting in the load message. If this is used, then saveAndExit is ignored. **TBD `14.6.10`**
   */
  noSaveBtn?: number;
  /**
   * 1: Uses the default filename for new files (used with the `url` parameter)
   */
  notitle?: number;
  /**
   * 1: Suppresses the warning before an unload for local files.
   */
  nowarn?: number;
  /**
   * 0: Disables the OneDrive integration.
   */
  od?: number;
  /**
   * [1|0]: Registers or unregisters the progressive web app (all remote storage locations are disabled).
   */
  offline?: number;
  /**
   * prefix+ID: If _location hash properties_ are not available, use this as a replacement. The browser will add the hash property to the URL immediately and not remove the URL parameter. Existing hash property takes precedence.
   */
  open?: string;
  /**
   * 1: Saves all Google Drive files as `application/vnd.jgraph.mxfile`.
   */
  'override-mime'?: number;
  /**
   * id1;id2;...;idN: Selects which plugins to load. _See the list of available plugins_.
   */
  p?: string;
  /**
   * index: Starts with the given page (the default is the first page, where the index for the first page is `0`)
   */
  page?: number;
  /**
   * ID: Starts with the given page ID (has precedence over the `page` URL parameter). To find the ID of the current page, right click on the canvas and select *Edit Data*. The ID is the first entry in this dialog.
   */
  'page-id'?: string;
  /**
   * 0/1: Disables/enables the Google file picker in dialogs.
   */
  picker?: number;
  /**
   * 0: Does not load _plugins_.
   */
  plugins?: number;
  /**
   * `client=1`: Runs diagrams.net in client mode. This displays a normal UI and sends a `ready` message to the opener or parent when the page is loaded. After receiving a message containing XML or compressed XML, a local file is created. The file is then set to `modified` so the connection to the window can be closed after sending the initial XML. Whether the XML is loaded again after a page refresh, depends on the caller implementation. Use `proto=json` to use a custom protocol for special cases. **NEW `14.6.10`**
   */
  proto?: {
    [k: string]: unknown;
  };
  /**
   * 0: Sets the default `pageVisible` to `false`.
   */
  pv?: number;
  /**
   * 0: Disables the ability to (un)register the progressive web app (when installed it will stay installed). **NEW `14.6.10`**
   */
  pwa?: number;
  /**
   * 1: Returns a JSON structure with the diagram bounds in embed and client mode. This message is dispatched immediately after receiving the diagram XML. **TBD `14.6.10`**
   */
  returnbounds?: number;
  /**
   * id: Selects a specific revision of a Google Drive or Dropbox file.
   */
  rev?: string;
  /**
   * 1: Uses chromeless mode with Google Drive realtime enabled.
   */
  rt?: number;
  /**
   * 1: Starts with the ruler enabled.
   */
  ruler?: number;
  /**
   * local/remote: Enables/disables saving files locally (default is `local`). If this is disabled, then files are echoed via a servlet for a local save.
   */
  save?: 'local' | 'remote';
  /**
   * 1: Displays a Save and Exit button ne. Instead of using this URL parameter, you can specify this setting in the load message. **TBD `14.6.10`**
   */
  saveAndExit?: number;
  /**
   * 0: Starts with scrollbars disabled.
   */
  sb?: number;
  /**
   * value: Starts with given value in the search shapes box.  ## Modes **NEW `14.6.10`**
   */
  'search-shapes'?: string;
  /**
   * 1: Shows a Loading... spinner while waiting for the diagram data to load in embed mode. **TBD `14.6.10`**
   */
  spin?: number;
  /**
   * 0: Does not show the splash screen.
   */
  splash?: number;
  /**
   * 1: Disables all features that require external web services (such as _PDF export_).
   */
  stealth?: number;
  /**
   * device: Adds a device storage option for touch devices.
   */
  storage?: 'device';
  /**
   * 0: Suppresses the warning for old viewers in SVG export. **NEW `14.6.10`**
   */
  'svg-warning'?: number;
  /**
   * [none|manual|auto]: Enables/disables collaborative editing (default is `auto`).
   */
  sync?: 'none' | 'manual' | 'auto';
  /**
   * [auto|self|frame|blank]: Opens links in the same window or frame or in a blank window in chromeless mode (`auto` is the default which opens relative links and anchors in the same window in chromeless mode, and all links in a new window in editing mode).
   */
  target?: 'auto' | 'self' | 'frame' | 'blank';
  /**
   * name: If the \#U hash property is used but the URL does not contain a filename to determine binary mode. See the list of _supported location hash properties_.
   */
  'template-filename'?: string;
  /**
   * 0: Disables the creation of thumbnails in Drive.
   */
  thumb?: number;
  /**
   * title: Sets a new file title (used with the `create` and `url` parameters).
   */
  title?: string;
  /**
   * 0: Disables the toolbar in chromeless mode.
   */
  toolbar?: number;
  /**
   * 0: Disables the Trello integration.
   */
  tr?: number;
  ui?: UITheme;
  /**
   * url: *Deprecated* - Use U hash property `#U{uri_encoded_url}` to open a diagram from a URI-encoded URL, eg. https://app.diagrams.net/\#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fjgraph%2Fdrawio-diagrams%2Fmaster%2Fdiagrams%2Fschema.xml **NEW `14.6.10`**
   */
  url?: {
    [k: string]: unknown;
  };
  /**
   * `vars=json`: Uses a URI-encoded JSON string for global _placeholders for use in labels and tooltips_ where enabled, e.g. `vars={"key":"value"}`.
   */
  vars?: string;
  /**
   * {"x": int, "y": int, "width": int, "height": int}: Sets the initial viewport when you specify file IDs. **NEW `14.6.10`**
   */
  viewbox?: {
    [k: string]: unknown;
  };
  /**
   * nocss: Disables the CSS zoom preview.
   */
  zoom?: string;
  [k: string]: unknown;
}
